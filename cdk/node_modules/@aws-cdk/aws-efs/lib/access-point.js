"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccessPoint = void 0;
const core_1 = require("@aws-cdk/core");
const efs_generated_1 = require("./efs.generated");
/**
 * (experimental) Represents the AccessPoint.
 *
 * @experimental
 */
class AccessPoint extends core_1.Resource {
    /**
     * @experimental
     */
    constructor(scope, id, props) {
        super(scope, id);
        const resource = new efs_generated_1.CfnAccessPoint(this, 'Resource', {
            fileSystemId: props.fileSystem.fileSystemId,
            rootDirectory: {
                creationInfo: props.createAcl ? {
                    ownerGid: props.createAcl.ownerGid,
                    ownerUid: props.createAcl.ownerUid,
                    permissions: props.createAcl.permissions,
                } : undefined,
                path: props.path,
            },
            posixUser: props.posixUser ? {
                uid: props.posixUser.uid,
                gid: props.posixUser.gid,
                secondaryGids: props.posixUser.secondaryGids,
            } : undefined,
        });
        this.accessPointId = resource.ref;
        this.accessPointArn = core_1.Stack.of(scope).formatArn({
            service: 'elasticfilesystem',
            resource: 'access-point',
            resourceName: this.accessPointId,
        });
        this.fileSystem = props.fileSystem;
    }
    /**
     * (experimental) Import an existing Access Point.
     *
     * @experimental
     */
    static fromAccessPointId(scope, id, accessPointId) {
        class Import extends core_1.Resource {
            constructor() {
                super(...arguments);
                this.accessPointId = accessPointId;
                this.accessPointArn = core_1.Stack.of(scope).formatArn({
                    service: 'elasticfilesystem',
                    resource: 'access-point',
                    resourceName: accessPointId,
                });
            }
        }
        return new Import(scope, id);
    }
}
exports.AccessPoint = AccessPoint;
//# sourceMappingURL=data:application/json;base64,